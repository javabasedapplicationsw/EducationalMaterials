1. 관계형 데이터베이스 (Relational Database)
    1) 키(key)와 값(value)들의 간단한 관계를 테이블화 시킨 
       매우 간단한 원칙의 데이터베이스임 
       - RDB라고 부름
    
    2) 2차원 표 이용한 데이터 목록화 관리를 하는 것이 주 목적임 (Excel)       
    3) 실세계를 그대로 반영함으로 직관적인 이해가 가능함 (주소록, 출석부, 가계부 등)
    4) 우리는 실생활에서 사용하는 모든 정보를 관계형 데이터베이스로 관리할 수 있음 

2. 관계형 모델 (Relational Model)   
    1) 집합론에 기반을 둔 일종의 데이터베이스 모델임 
        - 에드거 커드 
    2) 컬럼(열)과 로우(행)를 이루는 하나 이상의 테이블이 존재하고 테이블에 데이터가 저장됨 
    3) 각각의 테이블은 각각의 로우를 식별하는 기본 키(Primary Key)가 있음    
    4) 컬럼 = 필드(Field) = 속성(Attribute)
       로우 = 레코드(Record) = 튜플(Turple)  

3. 관점 비교
    예) 고객의 연락처 중 가운데 고객명 중 "순"자가 들어가는 고객의 이메일 주소는 어떻게 되나요?
        1) 프로그래밍적인 관점
           - "고객 연락처"가 저장되어 있는 파일을 연다
           - 전체 고객에 대해 아래를 반복한다
                - "고객명" 항목에 "순"자가 포함되어 있는지 체크 
                - 포함되어 있다면 "연락처 구분"이 "이메일"인지 체크하여 
              만약 "이메일"이라면 "연락처" 항목을 화면에 출력한다.
           - "고객 연락처" 파일을 닫는다     

        2) SQL 관점 
           -  select 연락처
                from 고객연락처 
              where 고객명 like '%순%'
               and 연락처구분 = '이메일'
              ;

4. SQL  
    1) SQL (Structured Query Language)
        - 관계형 데이터베이스 시스템 (RDBMS)의 데이테를 관리하기 위해 설계된 
          특수 목적의 프로그래밍 언어임.
    2) RDBMS에서 자료의 검색과 관리, 데이터베이스 스키마 생성과 수정, 
       데이터베이스 객체 접근 조정 관리를 위해 고안됨 
    3) 많은 수의 데이터베이스 관려 프로그램들이 SQL을 표준으로 채택하고 있음 

    4) 사용자 -------> SQL 작성 및  ------>  DBMS (시스템 SW) -------> 데이터베이스 
             <------- 명령 수행    <-------                  <-------   

    5) 장점
        - 일반 프로그래밍 언어에 비해 간결함 
        - 간단한 영어 문장을 사용함 
        - 기본 조작 명령어
            - SELECT, INSERT, UPDATE, DELETE
                                                                         
5. 테이블, 행, 열 
    1) 테이블(TABLE)
        - 관계형 데이터베이스의 2차원 표
        - 데이터 관리하는 유일 단위 
        - 테이블 설계는 데이터베이스 설계의 중요 부분 
    2) 행(ROW)
        - 테이블의 가로축임
        - 한 개의 라인  
    3) 열(COLUMN)
        - 테이블의 세로축임 
    4) 행과 열이 교차하는 부분을 셀(CELL)이라고 함                    