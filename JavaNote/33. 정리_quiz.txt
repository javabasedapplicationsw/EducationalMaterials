1. 인터페이스 
    1) 인터페이스를 이용한 클래스 동작
        - 100% 다형성이 보장됨 
        - 구현 메서드는 올수 없음 
            - 추상메서드와 final static 상수만 올수 있음
        - 서로 다른 클래스의 공통부분을 묶을 때 사용 
        - 부모의 역할로 사용함 (Upcasting)

    2) 다중상속을 대처하는 인터페이스 

2. 추상클래스와 인터페이스 
    1) 공통점 
        - 다형성 보장하기 위해서 등장된 개념 
        - 추상 메서드를 가질 수 있음 
        - 단독으로 객체를 생성 할수 없음 
        - 부모의 역할로 사용함 (Upcasting)

    2) 차이점 
        - 서로 비슷한 클래스의 공통부분을 묶을 때 사용 ==> 추상클래스 (: 추상메서드 + 구현메서드)
        - 서로 다른 클래스의 공통 부분을 묶을 때 사용 ==> 인터페이스 (: 추상메서드 + final static 변수)

3. 정리 및 Quiz1
    1) 서로 비슷한 클래스의 공통부분을 묶을 때 사용하는 클래스를 무엇이라고 하는가?
        - 추상클래스 

    2) 서로 다른 클래스의 공통부분을 묶을 때 사용하는 클래스를 무엇이라고 하는가?
        - 인터페이스    

    3) 인터페이스가 가질 수 있는 멤버 2가지는 무엇인가요?
        - 추상메서드, final static 상수 

    4) 다형성을 보장하기 위해서 등장된 클래스 2가지는 무엇인가요?
        - 추상클래스, 인터페이스 

    5) Dog 클래스는 Animal 클래스를 상속받고 Pet 인터페이스를 구현한 자바 코드를 작성하시오.
        - public class Dog extends Animal implements Pet { }        

4. 자바 최상위 클래스 Object
    1) 어떤 클래스 한 개를 만들면 기본적으로 생략된 코드는 무엇인가요? (3군데)

        import java.lang.*;
        public class A extends Object {
            public A() {
                super();
            }                
        }                                  
                    
    2) A 클래스를 사용하기 위해서 객체 생성하기 

        A a = new A();
        Object obj = new A();       //Upcasting

    3) Object 클래스를 이용하여 다형성 적용        
        - 다형성 인수로 Object 활용하기   
        - 다형성 배열로 Object[] 활용하기    

    4) Object 클래스의 toString() 메서드 
        - 객체의 번지를 문자열로 출력
        - 재정의 해서 사용                     

5. 자바 API 활용와 API 만들기 
    1) API 
        - Java에서 제공해주는 class들
        - 직접 만들어서 사용하는 class들 
        - 다운(jar) 받아서 사용하는 class들  

    2) 직접 만들어서 사용하는 class들
        - 예) 배열에 저장된 수중에서 최대값, 최소값을 구하는 클래스를 만드시오.
            - 배열에서 첫 번째 값을 최소값으로 설정하고 
              배열을 순회하면서 최소값보다 작은 값을 찾으면 최소값으로 업데이트함          

    3) Java에서 제공해주는 class들
        - 예) Random 클래스를 이용한 6개의 로또 난수 생성하여 중복되지 않게 배열에 저장하시오.
            - 난수(Random Number) : 예측이 불가능한 무작위 수
            - Random 클래스 
                - 임의의 랜덤 값 만들어 낼때 사용 
                - public boolean nextBoolean()              //boolean형 난수 반환 
                - public int nextInt()                      //int형 난수 반환
                - public int nextInt(int bound)             //0 이상 bound 미만 범위의 int형 난수 반환

            - rand.nextInt(45) ==> 0 이상 45 미만의 난수를 반환 
              rand.nextInt(45) + 1 ==> 1부터 45 사이의 난수를 반환                  

    4) 다운(jar) 받아서 사용하는 class들  
        - https://mvnrepository.com/ 
        - gson
            - 자바 객체를 JSON 형식으로 변환하거나,
              JSON 데이터를 자바 객체로 변환하는 라이브러리(API) 

        - JSON
            - JavaScript Object Notation
            - 경량의 데이터 교환 형식               
            - 프로그래밍 언어나 플랫폼에 상관없이 데이터를 교환 할수 있도록 설계되었음 
            - 키-값 쌍(key-value pair)으로 이루어진 데이터 객체를 표현함 
                {"name" : "이순신", "age" : 30}

        - 자바 클래스 (객체)를 JSON으로 변환하기 
            - ex) Person 클래스를 정의 => 이 클래스의 객체를 JSON 형식으로 변환, 출력하기
                - Gson 객체를 생성한 후, toJson() 메서드를 사용하여
                  객체를 JSON 형식의 문자열로 변환함  

        - JSON 형식의 문자열을 자바 객체로 변환하기
            - Gson 객체를 생성한 후, fromJson() 메서드를 사용하여 
              JSON 문자열을 자바 객체로 변환함 
              - 변환할 클래스의 타입을 인자로 전달함
              - 객체의 필드 값을 출력함 

6. 정리 및 Quiz1
    1) Random 클래스를 이용하여 난수를 1 ~ 10까지 발생시키는 코드를 기술하시오.
        - int num = rand.nextInt(10) + 1;

    2) 프로그래밍 언어나 플랫폼에 상관없이 데이터를 교환할 수 있도록 설계된 데이터 형식을
       무엇이라고 하는가?
        - JSON 

    3) 이름(name)이 신사임당이고 나이(age)가 36인 데이터를 JSON 형식으로 표현하시오.
        - {"name":"신사임당", "age":36}          

    4) JSON 형식의 문자열을 자바 객체로 변환해주는 Gson API 메서드는 무엇인가요?
        - fromJson()

    5) 객체를 JSON 형식으로 변환해주는 Gson API의 메서드는 무엇인가요?
        - toJson()                      

7. API 만들어 보기 
    1) 배열처럼 동작하는 API 
        - 기존의 배열 사용 이해

    2) 예: 책 3권을 배열에 저장하고 출력하시오.        

    3) 예: 객체 3개를 배열에 저장하고 출력하시오.
        - 배열을 직접 사용하지 않고 API를 사용해서 배열을 동작시킴 



                              

