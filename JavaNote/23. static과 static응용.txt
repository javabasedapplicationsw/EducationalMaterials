1. static과 메모리 관계      ①②③④⑤⑥⑦⑧⑨⑩
    1) 메인(시작) 클래스는 객체생성없이(new) 실행이 됨    
        ① JVM이 실행할 클래스를 찾음.
        ② static 키워드가 붙어있는 멤버들을 정해진 메모리 위치(static-zone)에 한번 자동으로 로딩함 
            - static 멤버들은 클래스를 사용하는 시점에 딱 한번 메모리에 로딩됨 
            - 여기서 main() 메서드가 static이기 때문에 메모리에 자동으로 로딩함 
        ③ JVM이 static-zone에서 main() 메서드를 호출함 
        ④ 호출된 메서드를 Call Stack Frame Area(Stack Area)에 push(기계어코드를 넣음) 한 뒤
          동작을 시작함            

    2) 프로그램 종료
        - stack에 아무것도 없으면 프로그램이 종료    

    3) Call Stack Frame Area 
        - 메서드가 호출되면 호출된 기계어코드가 push되고 실행되는 메모리 공간 
        - 현재 프로그램이 실행되고 있는 상태를 파악을 할수 있음 
        - LIFO(Last-In_First-Out)구조임 

    4) PC (Program Counter) 
        - 현재 수행중인 프로그램 위치 

    5) Method Area 
        - 메서드의 기계어 코드가 할당되는 메모리 공간 
        - static 멤버들의 할당되는 메모리공간 

    6) Heap Area 
        - 객체가 생성(new)되는 메모리 공간  

2. static 변수 
    1) 여러 인스턴스에서 공통으로 사용하는 변수 (전역 변수)         
        - 여러 인스턴스가 공유하는 기준 값이 필요한 경우 
            - 학생마다 새로운 학번 생성 
            - 카드회사에서 카드를 새로 발급할 때마다 새로운 카드 번호를 부여
            - 회사에 사원이 입사할때 마다 새로운 사번이 필요함  

3. static 메서드 
    1) = 클래스 메서드 = 정적 메서드 
    2) 인스턴스 변수를 사용할수 없음 
    3) static 메서드는 인스턴스 생성과 무관하게 클래스 이름으로 호출 될수 있음 
    4) 인스턴스 생성 전에 호출 될 수 있으므로 
       static 메서드 내부에서는 인스턴스 변수를 사용할수 없음   
    5) 클래스 이름으로 호출 가능 

4. 변수의 유효 범위(scope)와 메모리 

    변수 유형           선언 위치           사용 범위               메모리 
    ----------------------------------------------------------------------------------------------
    지역 변수           함수 내부에 선언    함수 내부에서만 사용        스택 -- 함수가 호출될때 생성되고
    (로컬 변수)                                                              함수가 끝나면 소멸함 

    멤버 변수           클래스 멤버변수로    클래스 내부에서 사용,       힙 -- 인스턴스가 생성될 때 힙에
    (인스턴스 변수)      선언                참조 변수로 다른클래스에서        생성되고, GC가 메모리를 
                                            사용가능                         수거할때 소멸됨 
    static 변수         static 사용하여      (상동)                   메서드 영역 --프로그램 시작할때 
    (클래스 변수)        클래스 내부에 선언                                  상수와 함께 메서드 영역에
                                                                           생성되고 프로그램이 끝나면
                                                                           메모리를 해제할 때 소멸됨  

5. static 응용 - 싱글톤 패턴(singleton pattern)
    1) 싱글톤 패턴 
        - 프로그램에서 인스턴스가 단 한 개만 생성되어야 하는 경우 사용하는 디자인 패턴 
        - static 변수, static 메서드 활용하여 구현 할수 있음 

    2) 싱글톤 패턴 구현하기 
        - 생성자는 private으로 선언 
        - 클래스 내부에 유일한 private 인스턴스 생성                                                                                   
        - 외부에서 유일한 인스턴스를 참조할 수 있는 public 메서드 제공 