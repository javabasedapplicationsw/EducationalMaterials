1. 상수(constant) 
    1) 상수는 변하지 않는 수 
    2) 원주율 3.14, 1년 12개월 , 4계절 등 
    3) final 예약어를 사용하여 선언 
    4) 상수를 사용하면 변하지 않는 값을 반복하여 사용할 때 의미있는 문자로 인식됨 
       혹, 변하더라도 선언한 부분만 변경하면 되므로 여러부분을 수정할 필요가 없음 

2. 리터럴 (literal)
    1) 프로그램에서 사용하는 숫자, 문자, 논리값을 뜻함 
    2) 리터럴은 상수 풀(constant pool)에 있음 
    3) 정수 리터럴은 int로, 실수 리터럴은 double로 저장됨 
        - 정수의 범위가 넘어가는 L,l을 
          실수는 float로 사용하려는 경우는  F,f 식별자를 써줘야 함 

3. 형 변환 (Type Conversion, Casting)
    1) 서로 다른 자료형 간에 연산등의 수행을 위해 하나의 자료형으로 통일하는 것 
        - 값의 타입(DataType)을 다른 타입으로 변환하는 것
    2) 묵시적 형 변환 (자동 형 변환), 명시적 형 변환(강제 형 변환)이 있음 
    3) 묵시적 형 변환 원칙 
        - 바이트 크기가 작은 자료형에서 큰 자료형으로 형 변환은 자동으로 이루어짐 
            - 작은 Type이 큰 Type에 저장되는 경우 (예: byte -> int)
        - 덜 정밀한 자료형에서 더 정밀한 자료형으로의 형 변환은 자동으로 이루어짐 

        ================================>         ===================>
        정수                                       실수 
        byte    short   int     long      ==>     float       double 
        (1byte)  (2)    (4)      (8)               (4)          (8)
                 char 
                 (2)  
    4)  강제 형변환 (명시적)
        - 큰 Type이 작은 Type에 저장되는 경우 (예: int -> byte, 손실발생)
        - 타입을 강제로 맞춰야 함
            - (DataType)변수;
        - 예)
            float형 데이터를 int형에 담아야 되는데 어떻게 해야 되는가?
        - 기본자료형 간의 강제 형 변환     
            - int(4byte) -> char(2byte)                 (char)65                'A'
              float (4byte) -> int (4byte)              (int)2.6f                2 (손실)
              

    5) boolean type은 형변환이 안됨.            

