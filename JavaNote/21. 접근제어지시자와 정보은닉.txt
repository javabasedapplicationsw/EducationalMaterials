1. 접근 제어 지시자(Access Modifier)
    1) 클래스 외부에서 클래스의 멤버 변수, 메서드, 생성자를 사용할 수 있는지 여부를 지정하는 키워드 
    2) 객체 상호간에 접근을 제어하는 방법 
    3) 클래스를 설계할 때 고려해야 함 
    4) 클래스와 클래스 내부에서 만들어지는 멤버에 접근 제한자를 사용할수 있음.

2. 4가지의 접근제한자(Access Modifier)
    1) private 
        - 같은 클래스 내부에서만 접근 가능 (외부 클래스, 상속 관계의 클래스에서도 접근 불가)
        - 자기 자신만 접근 가능 
        - 모든 패키지에서 접근 불가 
        - (모든 멤버변수는 private)

    2) 아무것도 없음 (default - 단어로 존재하지 않음)
        - 같은 패키지 내부에서만 접근 가능 
        - 상속 관계라도 패키지가 다르면 접근 불가 

    3) protected 
        - 같은 패키지나 상속관계의 클래스에서 접근 가능하고
          그 외 외부에서는 접근 할수 없음 

    4) public
        - 클래스의 외부 어디서나 접근 할수 있음 
        - 모든 패키지에서 접근 가능 
        - (모든 클래스는 public) 
        - (모든 멤버메서드는 public)      

3. get() / set() 메서드 (getter, setter 메서드)
    1) private으로 선언된 멤버 변수(필드)에 대해 접근, 수정 할수 있는 메서드를 public으로 제공   
        - 정보은닉된 정보에 접근하는 방법  
    2) get() 메서드만 제공되는 경우 read-only 필드 
    3) 이클립스에서 자동으로 생성됨   

4. 정보 은닉(information hiding)              
    1) 객체지향프로그램에서 외부에서 필요한 접근 가능한 최소한의 정보를 오픈함으로써
       객체의 오류를 방지함
    2) 클라이언트 객체가 더 효율적으로 객체를 활용할 수 있도록 해줌    

5. 캡슐화 (encapsulation)  
    1) 꼭 필요한 정보와 기능만 외부에 오픈함
    2) 대부분의 멤버 변수와 메서드를 감추고
       외부에 통합된 인터페이스만은 제공하여 일관된 기능을 구현하게 함.
    3) 각각의 메서드나 멤버 변수를 접근함으로써 발행하는 오류를 최소화 함.       