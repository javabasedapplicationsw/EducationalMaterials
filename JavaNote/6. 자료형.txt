1. 변수와 메모리 
    1) 변수를 만들때 고려 되는 것
        - 크기와 데이터의 종류
        - 자료형(DataType)
            - 어느 정도의 크기로 만들 것인가?
            - 변수는 어떤 종류의 데이터를 넣을 것인가?
        - 자료형 종류 
            - 기본자료형
                - 프로그램에서 기본적으로 제공해주는 자료형 
            - 사용자 정의 자료형 
                - 사용자가 만들어서 사용하는 자료형       
                - 객체자료형 
        - 변수를 만듦
            - 메모리에 기억공간이 만듦
            - 선언(declaration)을 해야 함            
                - 자료형 변수이름;
                    - int a;
                    - float b; 
            - 변수를 선언하면 해당되는 자료형의 크기 만큼 메모리가 할당
            - 변수는 할당된 메모리를 가리키는 이름 
    
    2) 예: 정수 한개를 저장하기 위해서 변수를 선언하시오.
            
            변수
            --
        int a = 10;             //상수
        ---   --
        자료형 할당 

        int b = a;              //변수
        int c = b * 10;         //연산식
        int d = System.out.println(c)       //메서드 호출문 

        L-Value = R-Value 




2. 기본자료형의 종류 

      1)DataType    크기        데이터(종류)
        -----------------------------------------------------------------------------------------------------
        byte        1byte          정수           1바이트 단위의 자료형 동영상,음악파일,실행파일 자료 처리할때 사용          
        short       2byte          정수           2바이트 단위의 자료형, C/C++ 언어와 호환시 사용   
        int         4byte          정수           정수에 대한 기본 자료형, 프로그램 사용하는 모든 숫자은 int로 저장됨.   
        long        8byte          정수           숫자의 뒤에 알파펫 L 또는 l을 써서 long형임을 표시함 

                                                  실수는 정수보다 정밀함
        float       4byte          실수           숫자의 뒤에 알파펫 F 또는 f을 써서 float형임을 표시함 
        double      8byte          실수           실수에 대한 기본 자료형 

        char        2byte          문자 

        boolean     1byte          참,거짓  

      2)수의 범위 
        - 1bit : 0, 1을 저장하는 최소의 단위  (2^1)
        - 8bit = 1byte                      (2^8 = 256)

        - byte : -2^7(-128) ~ 2^7 - 1 (127)
                S | 7bit
                MSB : 0(양수), 1(음수)     

        - short : -2^15(-32,768) ~ 2^15 - 1 (32,767)
                S | 15bit     

        - char : 0 ~ 2^16 - 1 (65,535)
                 16bit       

        - int : -2^31 (-2,147,483,648 ) ~ 2^31-1 (2,147,483,647)  
                S | 31bit      

        - long : -2^63 (-9,223,372,036,854,775,808 ) ~ 2^63-1 (9,223,372,036,854,775,807
                S | 63bit   

        - 부동소수점 (floating point)
            - float : 4byte
                21.8125 = 0.218125 * 10^2
                          --------     -- 
                           지수        가수
                           (exponet)   (fraction/mantissa)
                           S |  e(8)  |  m(23)

            - double : 8byte                
)                          S |  e(11)  |  m(52)
 


3. 문자는 프로그램에서 어떻게 표현하는가?
    1) 문자도 정수로 표현함 
    2) 어떤 문자를 컴퓨터 내부에서 표현하기 위해 특정 정수 값을 정의 
    3) 문자세트 (character set)
        - 각 문자를 얼마로 표현할 것인지 코드 값을 모아둔 것 
        - 문자를 숫자로 변환한 값의 세트 
        - ASCII, euc-kr, utf-8, utf-16... 

    4) 자바는 문자를 나타내기 위해 전 세계 표준인 UNICODE를 사용   
        - 
            <------ decoding    
            A는 65
            ------> encoding    

    5) encoding : 문자가 숫자로 변환되는 것 
       decoding : 숫자에서 다시 문자로 변환되는 것             

    7) ASCII code : 알파펫과 숫자, 특수 문자등을 1바이트에 표현하는데 사용하는 문자세트 
       UNICODE : 전 세계 표준으로 만든 문자 세트 
        - UTF-8 : 1바이트에서 4바이트까지 다양하게 문자를 표현할 수 있음 
        - UTF-16 : 2바이트 문자를 표현 

4. 논리형 
    1) true(참), false(거짓) 두 가지만 나타냄 
    2) 1바이트 사용 함 
    3) 값이 존재하는지, 배열이 비었는지, 결과가 참인지 거짓인지등을 표현         

5. 지역변수(local variable)의 자료형 없이 사용하기 
    1) 자바10 지원됨
    2) 지역변수만 사용 가능
    3) 추론 가능한 변수에 대한 자료형을 선언하지 않음 
    4) 한번 선언하여 추론 된 변수는 다른 타입의 값을 대입 할수 없음    

6. 수의 표현(진법) 이해
    1) 10진수 (decimal)
    2) 2진수 (binary)
    3) 8진수 (octal)
    4) 16진수 (hexa)            