1. 프로그래밍 
    1) 컴퓨터가 일을 수행하도록 프로그래밍 언어로 명령어 집합(프로그램)을 만드는 일 

2. 컴파일, 컴파일러 
    1) 컴파일 (compile)
        - 프로그래밍 언어를 컴퓨터가 실행 가능한 기계어로 만드는 일 
    2) 컴파일러 (compiler)
        - 기계어로 바꾸어 주는 프로그램 
        - 예) 자바 컴파일러, gcc      

3. 자바 프로그래밍
    1) 자바 역사
        - 1991년 제임스 고슬링을 비롯한 썬 마이크로 시스템스 연구원들이 처음 개발
        - 가전, 휴대용 장치에 사용되는 소프트웨어 언어로 개발됨. 안정성이 중요   
        - 2006년 11월 ~ 2007년 5월까지 썬 마이크로시스템즈는 대부분은 자바를 GPL 라이선스로 소스를
          오픈 함.
        - 2009년 4월 오라클과 인수 합병됨
            - 자바에 대한 권리 및 유지보수 또한 오라클로 넘어감            

    2) 자바 플랫폼 (자바 언어로 만들 수 있는 프로그램의 유형)
        - 플랫폼(platform)
            - 자바 언어로 작성된 프로그램이 실행되는 특정한 환경   
        - Java Platform, Standard Edition (Java SE) 
            - 데스크톱 응용소프트웨어 : JavaSE 플랫폼을 구축 해야 함 
        - Java Platform, Enterprise Edition (Java EE) (Jakarta EE)
            - 웹 기반 응용소프트웨어 : JavaEE 플랫폼을 구축 해야 함  
        - Java ME Embedded
            - 모바일 기반 응용소프트웨어 : Java ME Embedded 구축 해야 함  

4. 자바 개발도구 설치 (JDK)
    1) 자바 개발 키트(Java Development Kit, JDK) 11 설치 
        - 자바 기반의 개발환경에서 가장 기본이 되는 소프트웨어
    2) Java 언어 : 100% 무료 
    3) JDK 
        - 유료 버전의 Oracle JDK
            - BCL(Binary Code License) : 개인적으로 사용하는 경우 무료.
            - 구독형 라이선스 : 일정기간 추가로 요금 지불 
        - 무료 버전의 OpenJDK      
            - 성능이나 안정성에 다소 문제가 있었지만 Java 11부터는 OracleJDK와 거의 동일해짐.
    4) 내PC -> 속성 -> 고급 시스템 설정 -> 환경 변수   
        - JAVA_HOME, C:\Program Files\Java\jdk-11.0.20.1+1
        - Path, %JAVA_HOME%\bin   
        - JAVA_HOME을 환경변수로 추가하고, Path에 JDK 설치 폴더에 있는 bin까지의 경로를 등록함       
    5) API (Application Programming Interface)
        - 자바에서 제공해주는 클래스들의 집합임.
    6) JVM (Java Virtual Machine)
        - 자바 프로그램을 실행해주는 프로세서(엔진)  
    7) JavaSE 개발 환경이 구축 됨
        - JVM, API, TOOL(명령어)이 PC에 설치가 되었다는 의미.
        - 자바언어로 데스크톱 응용소프트웨어를 개발할수 있음.    

5. JavaSE 프로젝트 구조  
    1) 소스파일은 .java로 저장함 
    2) 실행가능한 파일은 .class로 만들어짐 (byte code)       

6. JVM과 자바의 구동방식 
    1) 1차 컴파일 된 bytecode (.class)를 자신의 OS에 맞게
    2) 한번 더 컴파일하여(2차) 실행파일 (.exe) 메모리에 로딩하여 실행
        - bytecode (중간어코드)
            - 어떤 OS에서 실행 할지 모르기 때문에 확실하게 exe 코드로 만들지 못하고 
              중간단계격으로 만들어 놓음
            - JVM이 알아서 실행함   
    3) 플랫폼(OS) 독립적인 개발이 가능함 
    4) 자동으로 메모리를 관리해줌 

7. 자바 프로그래밍의 특징 
    1) 플랫폼에 영향을 받지 않으므로 다양한 환경에서 사용할수 있음.

                자바 소스 코드 (Hello.java)
                         \|/
                     자바컴파일러 
                         \|/
                  바이트 코드 (Hello.class) 
                |                         |  
               \|/                       \|/
             윈도우 JVM              리눅스 JVM
               \|/                       \|/
             윈도우에서 실행          리눅스에서 실행 

    2) 객체 지향 언어(OOP)이기 때문에 유지보수가 쉽고 확장성 좋음 
    3) 프로그램이 안정적임 
    4) 풍부한 기능이 제공되는 오픈 소스임              

8. 자바를 활용한 프로그래밍
    1) 웹 애플리케이션 구현 
    2) 안드로이드 프로그래밍
    3) 게임 프로그래밍 

9. 훈련해야 할 내용 
    1) 자바 언어 익히기 (문법)
    2) 객체지향 프로그래밍 개념 익히고 자바로 구현
    3) 자료구조 이해하고 구현하기 
    4) 자바 언어로 문제 해결하기 

10. IDE (Integrated Development Environment) 개발도구 설치 
    1) Eclipse(이클립스)
    2) Intellij (인텔리제이)
    


