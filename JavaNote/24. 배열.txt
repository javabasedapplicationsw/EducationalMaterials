1. 배열(Array)
    1) 한 개의 데이터를 다루는 것이 아니고 여러 개의 데이터를 다루는 자료구조  
    2) 자료형 변수;                        자료형[] 변수; 
                                               ---  
                                               배열자료형
       예) 정수 한개  int a;               정수 여러 개 int[] a;
           문자열 한개 String str;         문자열 여러 개 String[] str;
           책 한권     Book book;          책 여러 권    Book[] book; 

    3) 동일한 데이터를 여러 개 저장할 수 있는 구조 (객체, 덩어리, 바구니)   
    4) 동일한 연속적인 구조
    5) 동일한 타입의 변수들의 집합 
    6) 데이터를 담아서 이동하기 쉬움
    7) 동일한 자료형의 순차적 자료 구조 
    8) 인덱스 연산자[]를 이용하여 빠른 참조가 가능 
    9) 물리적 위치와 논리적 위치가 동일 
    10) 배열의 순서는 0부터 시작 
    11) 종류
        - 기본배열
        - 객체배열 
    12) 자바에서는 객체 배열을 구현한 ArrayList를 많이 활용함              


2. 배열 선언과 초기화  
    1) 자료형[] 변수명 = new 자료형[개수];          <=== 권장        
       자료형 변수명[] = new 자료형[개수]; 
    2) 배열의 길이를 구하는 속성 
        - length      
    3) 배열의 초기화 
        - 배열은 선언과 동시에 자료형에 따라 초기화 됨 (정수는 0, 실수는 0.0, 객체는 null)
        - 필요에 따라 초기값을 지정할수 있음 

3. 배열 사용하기 
    1) [] 인덱스 연산자 활용
        - 배열 요소가 저장된 메모리의 위치를 연산하여 찾아 줌 
    2) 배열의 길이와 요소의 개수는 동일하지 않음
        - 배열을 선언하며 개수만큼 메모리가 할당되지만, 
          실제 요소(데이터)가 없는 경우도 있음.
        - 배열의 length 속성은 배열의 개수를 반환해주기 때문에 
          요소의 개수와는 다름 

4. 객체 배열 사용하기 
    1) 객체 배열 선언과 구현
        - 기본 자료형 배열은 선언과 동시에 배열의 크기만큼의 메모리가 할당됨
        - 객체 배열의 경우엔 요소가 되는 객체의 주소가 들어갈 메모리만 할당됨
            - 4바이트 (null)
        - 각 요소 객체는 생성하여 저장해야 함       

    2) 객체 배열 복사하기 
        - System.arraycopy(Object src, int srcPos, Object dest, int destPos, int length)  
            - 배열 복사 메서드 
            - 얕은 복사 
                - 객체 주소만 복사되어 한쪽 배열의 요소를 수정하면 같이 수정됨 
                - 즉, 두 배열이 같은 객체를 가리킴 
        - 깊은 복사 
            - 각각의 객체를 생성하여 그 객체의 값을 복사하여 배열이 서로 다른 객체를 가리키도록 함                                                    

5. 2차원 배열 사용하기 
    1) 다차원 배열
        - 이차원 이상으로 구현된 배열 
        - 평면(이차원 배열)이나 공간(삼차원 배열)을 활용한 프로그램 구현 

    2) 이차원 배열 예           
        -                           열개수
                                    ---
            int[][] arr = new int[2][3];       
            ---     ---          --- 
            자료형   배열명       행개수 

6. ArrayList 
    1) 객체 배열을 구현한 클래스 
        - 기존의 배열 선언과 사용 방식은 배열의 길이를 정하고 
          요소의 개수가 배열의 길이보다 커지면 
          배열을 재할당하고 복사해야 했음 
        - 배열의 요소를 추가하거나 삭제하면 다른 요소들의 이동에 대한 구현을 해야 함.
        - ArrayList는 객체 배열을 좀더 효율적으로 관리하기 위해 제공해주는 클래스 
            - 최적의 알고리즘으로 구현 되어 있음 
            - 매우 유용하게 사용할수 있음 

    2) ArrayList 주요 메서드 
        - boolean add(E e)    
            - 요소 하나를 배열에 추가함 
        - int size()                                  
            - 배열에 추가된 전체 개수를 반환 
        - E get(int index)            
            - 배열의 index 위치에 있는 요소 값을 반환 
        - E remove(int index)            
            - 배열의 index 위치에 있는 쇼소 값을 제거하고 그 값을 반환 
        - boolean isEmpty()            
            - 배열이 비어 있는지 확인 
            
7. 향상된 for문 사용하기
    1) 배열의 n개 요소를 0부터 n-1까지 순차적으로 순회할 때 사용할 수 있음 
    2) for( 변수 : 배열 ) {

       }            