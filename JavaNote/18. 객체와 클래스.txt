1. intro
    1) 객체(Object) 데이터 
        - 개발자가 다루는 데이터 
    2) 온라인 서점 구축 할 때 데이터는 책(Book)이고
       영화예매예약 시스템을 구축 할 때 데이터는 영화(Movie)임.  

    3) 책과 영화 같은 데이터를 변수에 저장하기 위해서는 새로운 자료형이 필요함  
    4) 새로운 자료형 (사용자 정의 자료형)        

2. 기본 자료형 vs 새로운 자료형
    1) 객체 데이터는 하나의 구조(하나의 변수)로 이루어진 데이터가 아니라
       여러 개의 구조 (여러개의 변수)로 이루어진 데이터임.
    2) 이런 객체 데이터를 변수에 저장하기 위해서 
       새로운 자료형이 필요하기 때문에
       개발자가 직접 자료형을 만들어 사용 할수 있음 => 객체지향프로그래밍  

3. 새로운 자료형 사용하는 방법 (객체를 생성하는 방법)
    1) 새로운 자료형 선언                   
        - Book book;
    2) 객체를 생성 (실체를 만들고)하고 
        - new Book();                   <== 실체 (인스턴스, instance)
    3) 생성된 객체를 연결(저장)하고 
        - book =  new Book();     
    4) 객체를 생성 후 실제 데이터 저장하기 
        - 도토연산자(참조연산자) 사용         

4. 사용자 정의 자료형 
    1) 객체(Object) = 이질적인 구조 = 모델(Model) = VO(Value Object) = DTO(Data Transfer Object)

    2) 예
        - 책이라는 데이터를 변수에 저장하기 위해서는 책이라는 자료형이 필요함 
        - 자료형 변수 
           BookDTO b;

        - 헬스클럽회원 데이터를 변수에 저장하기 위해서 회원이라는 자료형이 필요함 
        - MemberDTO m;

        - 영화라는 데이터를 변수에 저장하기 위해서 영화라는 자료형이 필요함 
        - MovieDTO v;            


5. 클래스 
    1) 현실세계에 있는 객체를 객체지향 프로그램에서 사용하기 위해 
       객체의 상태정보(멤버변수)와 행위정보(멤버메서드)를 뽑아서 설계하는 도구 
       ---    ----------------   ------------------
    2) 객체(Object) = 상태정보(멤버변수) + 행위정보(멤버메서드)     

    3) 객체 생성 과정 
        - 모델링 된 객체를 사용하기 위해서는 메모리에 객체를 생성해야 함

        - 변수 선언
            - Person p;
                    --
                    객체변수, 참조변수    

        - 객체 생성 

                  생성자 메서드
                  ------------
            - new Person();
              ---
              new 연산자     

        - 생생된 객체를 변수에 할당(대입, 저장)
            - 
                Person p = new Person();                              


















