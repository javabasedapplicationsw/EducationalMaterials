1. 소개
    1) 스프링 : 자바 엔터프라이즈 앱을 쉽게 만들수 있도록 도와주는 프레임워크 
    2) 엔터프라이즈 앱
        - 비즈니스 로직의 복잡함
        - 수 많은 사용자와 데이터를 처리하기 위한 기술적인 제약조건과 요구사항 복잡함

2. Enterprise Applications 
    1) 대규모의 데이터를 이용해 비즈니스 프로세스 지원 및 자동화함 
    2) 비즈니스의 근간으로 보안과 안정성, 확장성이 필요하며, 뛰어난 성능과 서비스의 안정성이 요구됨     
    3) 데이터 입/출력을 위한 다양한 사용자 인터페이스가 제공됨     

3. Java Enterprise Edition (Java EE)    
    1) 엔터프라이즈 애플리케이션에 필요한 확장성, 신뢰성, 보안성 등을 제공하는 
       자바 플랫폼이자 프레임워크임.
    2) 대규모, 네트워크, 다계층 애플리케이션을 더 쉽게 안전하고 탄탄하게 구축할 수 있도록 설계됨   
    3) 웹을 통한 UI, 선언적 트랜잭션 처리 등 전체 애플리케이션 스택을 제공함 
    4) 다양한 자바 명세 요구서 (JSR, Java Specification Request)을 바탕으로 작성된 표준 API 모음임. 

4. 웹 애플리케이션 (Web Application)
    1) 인터넷을 통해 웹 브라우저에서 이용할 수 있는 응용 소프트웨어임 
    2) SNS, 웹 메일, 전자상거래, 게시판, 블로그 등
    3) 동작
        - 웹 브라우저는 URL을 기반으로 보고 싶은 컨텐트를 HTTP 요청함
        - 웹 애플리케이션 서버(WAS)는 요청 처리 후 컨텐트를 HTTP 응답함  

5. 메이븐 프로젝트 웹 애플리케이션 
    1) 메이븐 (Maven)
        - 프로젝트 구조와 내용을 기술하는 선언적 접근 방식의 오픈 소스 빌드 툴 
        - 프로젝트 종속 라이브러리들과 그 라이브러리에 의존하는 Dependency 자원까지 관리할 수 있음 
        - 프로젝트 전반의 리소스 관리와 설정 파일 그리고 이와 관련된 표준디렉토리 구조를 
          처음부터 일관된 형태로 구성하여 관리할 수 있음 

    2) 애플리케이션을 만들 때 컴파일보다 더 많은 과정을 거치게 됨
        - 이런 과정을 빌드(build)라고 함 
        - 이런 작업을 자동으로 수행해 주는 빌드 툴임           

    3) 메이븐 프로젝트의 구조와 구성 요소 
        - 프로젝트 이름 
                |
                |--- pom.xml                         프로젝트 정보가 표시됨, 여러가지 라이브러리를 설정
                |---- src 
                       |
                       |---- main
                       |       | 
                       |       |---- java           자바 소스 파일 
                       |       |    
                       |       |---- resources      프로퍼티 파일, XML 파일     
                       |       | 
                       |       |---- webapp  
                       |                |
                       |                |------ resources
                       |                |
                       |                |------ WEB-INF     
                       |
                       |---- test 
                               |
                               |---- java           JUnit 테스트 파일 위치
                               |
                               |---- resources  

    4) pom.xml
        - 프로젝트 정보 설정 태그 
            - groupId
                - 프로젝트 그룹 id 
                - 도메인 이름을 사용해 설정함 
            - artifactId
                - 프로젝트 아티펙트 id 
                - 패키지 이름으로 설정함   
                - 브라우저에서 요청하는 컨텍스트(context) 이름

        - dependencies 정보 설정 태그 
            - dependency
                - 해당 프로젝트에서 의존하는 라이브러리 정보 기술 
            - groupId
                - 의존하는 프로젝트의 그룹 id 
            - artifactId
                - 의존하는 프로젝트의 아티펙트 id                                               