1. Transaction?
    1) AOP와 비슷
    2) 더이상 나눌 수 없는 작업의 단위(Tx)
    3) insert, update, select, delete가 각 하나의 Tx 
    4) 계좌 이체의 경우
        - 출금(update)과 입금(update)이 하나의 Tx로 묶여야 됨.
        - 출금 --> 돈 --> 입금 
            - 계좌 이체는 출금과 입금을 하나의 Tx로 묶어야 함.
            - '모' 아니면 '도' (All or Nothing)
            - 둘 다 성공하던지 하나만 실패해도 다 취소
                - 실패하면 rollback

2. Transaction의 속성 (ACID)
    1)원자성 (Atomicity)
        - 나눌 수 없는 하나의 작업으로 다뤄져야 함 
    2)일관성 (Consistency)
        - Tx 수행 전과 후가 일관된 상태를 유지해야 함 
    3)고립성 (Isolation)
        - 각 Tx는 독립적으로 수행되어야 함 
        - Isolation level 너무 높으면 다른 작업을 하는 사람은 기다려야 하는 상황 발생 
    4)영속성 (Durability)
        - 성공한 Tx의 결과는 유지되어야 함(DB)         

3. commit, rollback 
    1) 커밋(commit)
        - 작업 내용을 DB에 영구적으로 저장 
    2) 롤백(rollback)
        - 최근 변경사항을 취소 (마지막 커밋으로 복귀)

4. 자동 커밋(Auto commit) vs 수동 커밋(Manual commit)
    1) auto commit이 기본
    2) 자동 커밋
        - 명령 실행 후, 자동으로 커밋이 수행 (rollback 불가)
    3) 수동 커밋 
        - 명령 실행 후 명시적으로 commit 또는 rollback을 입력    

5. Tx의 Isolation level                              
    1) 각 Tx를 고립시키는 정도 
        - READ UNCOMMITED 
            - 커밋되지 않은 데이터도 읽기 가능 
        - READ COMMITED
            - 커밋된 데이터만 읽기(phantom read)
        - (default) REPEATABLE READ 
            - Tx이 시작된 이후 변경은 무시됨   
        - SERIALIZABLE 
            - 한번에 하나의 Tx만 독립적으로 수행 
            - 직렬화가 될 수록 성능은 떨어지고, 품질은 높아짐                       
