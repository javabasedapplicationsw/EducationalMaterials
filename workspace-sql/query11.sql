-- 아우터 조인 환경 만들기 

SELECT * FROM TB_EMP WHERE DEPT_CD = '100014';
SELECT * FROM TB_EMP WHERE DEPT_CD = '100015';
SELECT * FROM TB_EMP WHERE DEPT_CD = '000000';

-- 직원이 한명도 없는 부서 만들기
INSERT INTO TB_DEPT VALUES ('100014', '4차산업혁명팀', '999999');
INSERT INTO TB_DEPT VALUES ('100015', '포스트코로나팀', '999999');
COMMIT;

-- 참조 무결성 제약 조건(FK) 잠시 DROP
-- '000000'이라는 없는 부서에 데이터를 INSERT가 되게 하기 위해 하는 것임.
ALTER TABLE HM.TB_EMP DROP CONSTRAINT FK_TB_EMP01;

-- 부서명이 없는 곳(존재하지 않는 부서)에 직원을 만들기 
INSERT INTO HM.TB_EMP
(EMP_NO, EMP_NM, BIRTH_DE, SEX_CD, ADDR, TEL_NO, DIRECT_MANAGER_EMP_NO, FINAL_EDU_SE_CD, SAL_TRANS_BANK_CD, SAL_TRANS_ACCNT_NO,DEPT_CD, LUNAR_YN)
VALUES('1000000041', '이순신', '19811201', '1', '경기도 용인시 수지구 죽전1동 435', '010-5456-7878', NULL, '006', '003', '114-554-223433', '000000', 'N');
INSERT INTO HM.TB_EMP
(EMP_NO, EMP_NM, BIRTH_DE, SEX_CD, ADDR, TEL_NO, DIRECT_MANAGER_EMP_NO, FINAL_EDU_SE_CD, SAL_TRANS_BANK_CD, SAL_TRANS_ACCNT_NO,DEPT_CD, LUNAR_YN)
VALUES('1000000042', '정약용', '19820402', '1', '경기도 고양시 덕양구 화정동 231', '010-4054-6547', NULL, '004', '001', '110-223-553453', '000000', 'Y');
INSERT INTO HM.TB_EMP
(EMP_NO, EMP_NM, BIRTH_DE, SEX_CD, ADDR, TEL_NO, DIRECT_MANAGER_EMP_NO, FINAL_EDU_SE_CD, SAL_TRANS_BANK_CD, SAL_TRANS_ACCNT_NO,DEPT_CD, LUNAR_YN)
VALUES('1000000043', '박지원', '19850611', '1', '경기도 수원시 팔달구 매탄동 553', '010-1254-1116', NULL, '004', '001', '100-233-664234', '000000', 'N');
INSERT INTO HM.TB_EMP
(EMP_NO, EMP_NM, BIRTH_DE, SEX_CD, ADDR, TEL_NO, DIRECT_MANAGER_EMP_NO, FINAL_EDU_SE_CD, SAL_TRANS_BANK_CD, SAL_TRANS_ACCNT_NO,DEPT_CD, LUNAR_YN)
VALUES('1000000044', '장보고', '19870102', '1', '경기도 성남시 분당구 정자동 776', '010-1215-8784', NULL, '004', '002', '180-345-556634', '000000', 'Y');
INSERT INTO HM.TB_EMP
(EMP_NO, EMP_NM, BIRTH_DE, SEX_CD, ADDR, TEL_NO, DIRECT_MANAGER_EMP_NO, FINAL_EDU_SE_CD, SAL_TRANS_BANK_CD, SAL_TRANS_ACCNT_NO,DEPT_CD, LUNAR_YN)
VALUES('1000000045', '김종서', '19880824', '1', '경기도 고양시 일산서구 백석동 474', '010-3687-1245', NULL, '004', '002', '325-344-45345', '000000', 'Y');

-- LEFT OUTER JOIN
-- 현재 부서에 소속되어 있지 않은 직원들도 모두 집합에 포함됨 
-- TB_EMP은 다 나오고, TB_DEPT는 매칭되는 것만 나오게 됨 
SELECT A.EMP_NO 
	, A.EMP_NM 
	, B.DEPT_CD 
	, B.DEPT_NM 
FROM TB_EMP A, TB_DEPT B
WHERE A.DEPT_CD = B.DEPT_CD(+) 
 AND A.DEPT_CD IN (100001, 000000)
;

-- ANSI 조인 방식의 LEFT OUTER JOIN
SELECT A.EMP_NO 
	, A.EMP_NM 
	, B.DEPT_CD 
	, B.DEPT_NM
FROM TB_EMP A
LEFT OUTER JOIN TB_DEPT B 
ON (A.DEPT_CD = B.DEPT_CD)
WHERE A.DEPT_CD IN (100001, 000000)
;

-- RIGTH OUTER JOIN 
-- 현재 아무런 사원을 가지고 있지 않은 부서도 모두 출력됨 
-- TB_DEPT(RIGHT)는 모두 나오고 TB_EMP는 매칭되는 집합만 출력함 
SELECT A.EMP_NO 
	, A.EMP_NM 
	, B.DEPT_CD 
	, B.DEPT_NM
FROM TB_EMP A
	, TB_DEPT B 
WHERE B.DEPT_CD IN ('100014', '100015', '100001')	
 AND A.DEPT_CD(+) = B.DEPT_CD 
; 

-- ANSI 조인 방식의 RIGTH OUTER JOIN
SELECT A.EMP_NO 
	, A.EMP_NM 
	, B.DEPT_CD 
	, B.DEPT_NM
FROM TB_EMP A
RIGHT OUTER JOIN TB_DEPT B
ON (A.DEPT_CD = B.DEPT_CD)
WHERE B.DEPT_CD IN ('100014', '100015', '100001')	
;

-- FULL OUTER JOIN
-- EMP_NO가 널이거나 DEPT_CD가 널인 것에 대한 조건을 추가
SELECT 
	A.EMP_NO 
	, A.EMP_NM 
	, B.DEPT_CD 
	, B.DEPT_NM 
FROM TB_EMP A 
FULL OUTER JOIN TB_DEPT B 
ON (A.DEPT_CD = B.DEPT_CD)
WHERE 1=1
 AND (A.EMP_NO IS NULL 
 	  OR B.DEPT_CD IS NULL)
ORDER BY B.DEPT_CD DESC, A.EMP_NO DESC 
;

-- 아우터 조인 테스트 환경 설정 부분 삭제
DELETE 
FROM TB_DEPT 
WHERE DEPT_CD IN ('100014', '100015')
;

DELETE FROM TB_EMP 
WHERE EMP_NO IN ('1000000041', '1000000042', '1000000043', '1000000044', '1000000045')
;

ALTER TABLE HM.TB_EMP ADD CONSTRAINT FK_TB_EMP01 FOREIGN KEY(DEPT_CD)
REFERENCES HM.TB_DEPT(DEPT_CD)
;








