1. 자바 웹 기술의 최종 진화 
    1) 서블릿은 기본적으로 자바 코드임 
    2) 결과로 보여줄 HTML 코드를 일일이 자바로 생성,조합함
    3) 너무 많은 코드가 필요했음 
    4) => 기본을 HTML로 하고 필요한 부분만 자바 코드를 삽입하는 형태로 발전 (JSP)

2. 서블릿과 JSP 
    1) JSP 파일을 서블릿으로 변환하여 서블릿을 실행하는 방식 
    2) 한 번 서블릿으로 컴파일된 JSP 파일은 캐시되므로 성능 저하 없이 개발 생산성,
       유지보수 편의성을 얻게 됨 
    3)              서블릿                          JSP
         ----------------------------------------------------------------------------------
          자바 코드안에서 전체 HTML 페이지를 생산     HTML 코드 안에서 필요부분만 자바 코드 추가  
          변수 선언 및 초기화가 반드시 선행되어야함    내장객체 제공하여 즉시 사용할 수 있음 
          컨트롤러(Controller)를 만들때 사용          처리 결과를 보여주는 뷰(View)를 만들때 사용

3. Directive (지시어)
    1) JSP 페이지를 자바(서블릿) 코드로 변환하는 데 필요한 정보를 JSP 엔진에 알려줌 
        - 스크립트 언어, 인코딩 방식 등 설정 
    2) <%@ 지시어종류 속성1="값1" 속성2="값2" ... %>    
        - page 지시어 : JSP 페이지에 대한 정보 설정 
        - include 지시어 : 외부 파일을 현재 jsp 페이지에 포함시킴 
        - taglib 지시어 : 표현 언어(EL)에서 사용할 자바 클래스, JSTL을 선언함  

4. page 지시어 
    1) 속성들 
        - import    
            - 사용할 자바 패키지, 클래스 지정함 
        - errorPage
            - 해당 페이지에서 에러가 발생했을 때 에러 발생 여부를 보여줄 페이지를 지정함
        - isErrorPage
            - 해당 페이지가 에러를 처리할지 여부를 지정함                                          

5. include 지시어
    1) 웹 사이트에서 상단 메뉴나 하단 정보가 여러 페이지에서 반복되어 사용됨 
    2) 반복되는 부분을 별도의 파일에 작성해두고 필요한 페이지에서 include 지시어로 포함시킬수 있음 
    3) <%@ include file="포함할 파일의 경로" %>

6. 스크립트 요소 (Script Elements)
    1) 선언부, 스크립틀릿, 표현식    
    2) 선언부 (Declaration)
        - 스크립틀릿, 표현식에서 사용할 멤버 변수나 메서드 선언
        - <%! 메서드 선언 %>
    3) 스크립틀릿 (Scriptlet)        
        - 자바 코드를 작성하는 영역
        - <% 자바 코드 %>
    4) 표현식 (Experssion)
        - 상수, 변수, 연산자를 사용한 식 등 모든 표현식 
        - 웹 브라우저 화면에 출력할 때 사용
        - <%= 자바 표현식 %>        