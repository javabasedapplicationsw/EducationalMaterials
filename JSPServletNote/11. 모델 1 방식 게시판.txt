1. 개요
    1) DB 연동하여 데이터를 입력, 수정, 삭제, 조회 
    2) 기능 
        - 목록 보기 
        - 글쓰기 
        - 상세 보기 
        - 수정 하기 
        - 삭제 하기 

2. 모델1 구조 & 모델2 구조(MVC 패턴) 
    1) MVC 패턴 
        - 웹 애플리케이션은 사용자의 요청을 받아 처리한 후 응답하는 구조임 
        - 모델, 뷰, 컨트롤러의 약자 
        - 소프트웨어 개발 방법론의 일종  

        - 모델(Model) 
            - 데이터 처리를 담당 
            - 업무 처리 로직(비즈니스 로직) 혹은 데이터베이스와 관련된 작업을 담당   
        - 뷰(View) 
            - 화면 출력을 담당
            - JSP 페이지와 같이 사용자에게 보여지는 부분을 담당
        - 컨트롤러(Controller) 
            - 모델과 뷰를 제어함
            - 각자의 역할을 분담
            - 사용자의 요청을 받아서 그 요청을 분석하고, 필요한 업무 처리 로직(모델)을 호출함
            - 모델이 결과값을 반환하면 출력할 뷰(JSP 페이지)를 선택한 후 결과를 웹 브라우저에 출력하게 됨

    2) 모델1 구조 
        - JSP에 뷰와 컨트롤러가 혼재되어 있음 
        - 개발 속도가 빠르고 학습이 쉬운 장점 
        - 코드가 복잡해지고 유지보수가 어려워짐 

    3) 모델2 구조
        - 사용자의 요청을 컨트롤러인 서블릿이 받음 
        - 서블릿은 사용자의 요청을 분석한 후 모델을 호출
        - 모델로부터 데이터를 받아 뷰로 전달하면 최종적으로 사용자는 요청에 대한 응답을 함                        
        - 코드가 간결해짐, 유지보수가 쉬워짐 
        - 작은 프로젝트에서는 적합하지 않을 수도 있음

3. 목록 보기 
    1) 파일 
        - 목록 보기 화면 (list.jsp)        
        - DAO (BoardDAO.java)
        - DB (BOARD)

    2) 게시물 검색하기
        - 검색 항목(searchField)과 검색어(searchWord)가 주소표시줄 뒷부분에 쿼리스트링을 통해
          전송되게 됨         

4. 글쓰기  
5. 상세 보기
6. 수정하기
7. 삭제하기

